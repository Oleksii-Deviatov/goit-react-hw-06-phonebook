{"version":3,"sources":["redux/contacts/contacts-actions.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","App.jsx","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["addContact","createAction","value","payload","id","shortid","delContact","changeFilter","connect","dispatch","data","actions","useState","name","setName","number","setNumber","onSubmit","e","preventDefault","autoComplete","Box","display","flexDirection","TextField","label","onChange","target","margin","Button","variant","type","color","state","filter","useStyles","makeStyles","listItem","marginBottom","classes","className","Card","CardActionArea","CardContent","justifyContent","IconButton","component","onClick","getVisibleContacts","allContacts","normalizedFilter","toLowerCase","includes","contacts","List","map","App","Container","maxWidth","Typography","align","createReducer","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"+QAGMA,EAAaC,YAAa,gBAAgB,SAAAC,GAAK,MAAK,CACxDC,QAAQ,aACNC,GAAIC,OACDH,OAIDI,EAAaL,YAAa,gBAE1BM,EAAeN,YAAa,yB,OCmClC,IAMeO,cAAQ,MANI,SAAAC,GACzB,MAAO,CACLT,WAAY,SAAAU,GAAI,OAAID,EAASE,EAAmBD,QAIrCF,EAhDf,YAAsC,IAAfR,EAAc,EAAdA,WAAc,EACXY,mBAAS,IADE,mBAC5BC,EAD4B,KACtBC,EADsB,OAEPF,mBAAS,IAFF,mBAE5BG,EAF4B,KAEpBC,EAFoB,KAiBnC,OACE,sBAAMC,SANR,SAAuBC,GACrBA,EAAEC,iBACFnB,EAAW,CAAEa,OAAME,YAIYK,aAAa,MAA5C,SACE,eAACC,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAAlC,UACE,cAACC,EAAA,EAAD,CACEpB,GAAG,iBACHqB,MAAM,OACNvB,MAAOW,EACPa,SApBR,YAAkD,IAAZxB,EAAW,EAArByB,OAAUzB,MACpCY,EAAQZ,IAoBF0B,OAAO,UAET,cAACJ,EAAA,EAAD,CACEpB,GAAG,iBACHqB,MAAM,SACNvB,MAAOa,EACPW,SAvBR,YAAoD,IAAZxB,EAAW,EAArByB,OAAUzB,MACtCc,EAAUd,IAuBJ0B,OAAO,UAET,cAACC,EAAA,EAAD,CAAQC,QAAQ,WAAWC,KAAK,SAASC,MAAM,UAA/C,iCCdR,IAYexB,eAZS,SAAAyB,GACtB,MAAO,CACLC,OAAQD,EAAMC,WAIS,SAAAzB,GACzB,MAAO,CACLF,aAAc,SAAAL,GAAK,OAAIO,EAASE,EAAqBT,QAI1CM,EAhCf,YAA2C,IAAzBD,EAAwB,EAAxBA,aAAc2B,EAAU,EAAVA,OAK9B,OACE,sBAAMd,aAAa,MAAnB,SACE,cAACC,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAAlC,SACE,cAACC,EAAA,EAAD,CACEpB,GAAG,iBACHqB,MAAM,uBACNvB,MAAOgC,EACPR,SAXR,YAAoD,IAAZxB,EAAW,EAArByB,OAAUzB,MACtCK,EAAaL,IAWP0B,OAAO,iB,8DCLXO,EAAYC,YAAW,CAC3BC,SAAU,CACR,qBAAsB,CACpBC,aAAc,OAgCpB,IAMe9B,cAAQ,MANI,SAAAC,GACzB,MAAO,CACLH,WAAY,SAAAJ,GAAK,OAAIO,EAASE,EAAmBT,QAItCM,EAjCf,YAAmD,IAAjCJ,EAAgC,EAAhCA,GAAIS,EAA4B,EAA5BA,KAAME,EAAsB,EAAtBA,OAAQT,EAAc,EAAdA,WAC5BiC,EAAUJ,IAEhB,OACE,oBAAIK,UAAWD,EAAQF,SAAvB,SACE,cAACI,EAAA,EAAD,CAAMX,QAAQ,WAAd,SACE,cAACY,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,eAACtB,EAAA,EAAD,CAAKC,QAAQ,OAAOsB,eAAe,gBAAnC,UACE,8BACG/B,EADH,KACWE,KAEX,cAAC8B,EAAA,EAAD,CACEb,MAAM,UACNc,UAAU,OACVC,QAAS,kBAAMzC,EAAWF,IAH5B,SAKE,cAAC,IAAD,oB,SCxBhB,IAAM4C,EAAqB,SAACC,EAAaf,GACvC,IAAMgB,EAAmBhB,EAAOiB,cAEhC,OAAOF,EAAYf,QAAO,qBAAGrB,KACtBsC,cAAcC,SAASF,OAQjB1C,eAJS,SAAC,GAAD,IAAG6C,EAAH,EAAGA,SAAUnB,EAAb,EAAaA,OAAb,MAA2B,CACjDmB,SAAUL,EAAmBK,EAAUnB,MAG1B1B,EAtBf,YAAoC,IAAb6C,EAAY,EAAZA,SACrB,OACE,cAACC,EAAA,EAAD,UACGD,EAASE,KAAI,YAA2B,IAAxBnD,EAAuB,EAAvBA,GAAIS,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OACzB,OAAO,cAAC,EAAD,CAAiBX,GAAIA,EAAIS,KAAMA,EAAME,OAAQA,GAAhCX,W,kBCmBboD,I,EAAAA,EAtBf,WACE,OACE,mCACE,eAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,cAACC,EAAA,EAAD,CAAY7B,QAAQ,KAAK8B,MAAM,SAA/B,uBAIA,cAAC,EAAD,IAEA,cAACD,EAAA,EAAD,CAAY7B,QAAQ,KAAK8B,MAAM,SAA/B,sBAIA,cAAC,EAAD,IAEA,cAAC,EAAD,U,iDCZFP,EAAWQ,YALJ,CACX,CAAEzD,GAAI,OAAQS,KAAM,gBAAiBE,OAAQ,aAC7C,CAAEX,GAAI,OAAQS,KAAM,iBAAkBE,OAAQ,eAGlB,mBAC3BJ,GAAqB,SAACsB,EAAD,OAAU9B,EAAV,EAAUA,QAAV,4BAA4B8B,GAA5B,CAAmC9B,OAD7B,cAE3BQ,GAAqB,SAACsB,EAAD,OAAU9B,EAAV,EAAUA,QAAV,OACpB8B,EAAMC,QAAO,qBAAG9B,KAAgBD,QAHN,IAMxB+B,EAAS2B,YAAc,GAAD,eACzBlD,GAAuB,SAACmD,EAAD,YAAM3D,YAGjB4D,cAAgB,CAC7BV,WACAnB,WCPI8B,EAAU,YACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAK1DC,EAAwB,CAC5BC,IAAK,WACLC,YACAC,UAAW,CAAC,WAGRC,EAAQC,YAAe,CAC3BC,QAASC,YAAeP,EAAuBQ,GAC/ClB,aACAmB,UAAUC,IAGNC,EAAYC,YAAaR,G,QC1B/BS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUX,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAaY,QAAS,KAAML,UAAWA,EAAvC,SACE,cAAC,EAAD,UAINM,SAASC,eAAe,W","file":"static/js/main.f4381965.chunk.js","sourcesContent":["import shortid from 'shortid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst addContact = createAction('contacts/add', value => ({\n  payload: {\n    id: shortid(),\n    ...value,\n  },\n}));\n\nconst delContact = createAction('contacts/del');\n\nconst changeFilter = createAction('contacts/changeFilter');\n\nexport { addContact, delContact, changeFilter };\n","import React, { useState } from 'react';\nimport { TextField, Button, Box } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/contacts/contacts-actions';\n\nfunction ContactForm({ addContact }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  function inputNameHandler({ target: { value } }) {\n    setName(value);\n  }\n\n  function inputNumberHendler({ target: { value } }) {\n    setNumber(value);\n  }\n\n  function submitHendler(e) {\n    e.preventDefault();\n    addContact({ name, number });\n  }\n\n  return (\n    <form onSubmit={submitHendler} autoComplete=\"off\">\n      <Box display=\"flex\" flexDirection=\"column\">\n        <TextField\n          id=\"standard-basic\"\n          label=\"Name\"\n          value={name}\n          onChange={inputNameHandler}\n          margin=\"dense\"\n        />\n        <TextField\n          id=\"standard-basic\"\n          label=\"Number\"\n          value={number}\n          onChange={inputNumberHendler}\n          margin=\"dense\"\n        />\n        <Button variant=\"outlined\" type=\"submit\" color=\"primary\">\n          add contact\n        </Button>\n      </Box>\n    </form>\n  );\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addContact: data => dispatch(actions.addContact(data)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport { TextField, Box } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/contacts/contacts-actions';\n\nfunction Filter({ changeFilter, filter }) {\n  function inputFilterHendler({ target: { value } }) {\n    changeFilter(value);\n  }\n\n  return (\n    <form autoComplete=\"off\">\n      <Box display=\"flex\" flexDirection=\"column\">\n        <TextField\n          id=\"standard-basic\"\n          label=\"find contact by name\"\n          value={filter}\n          onChange={inputFilterHendler}\n          margin=\"dense\"\n        />\n      </Box>\n    </form>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    filter: state.filter,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeFilter: value => dispatch(actions.changeFilter(value)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport {\n  Card,\n  CardContent,\n  IconButton,\n  Box,\n  CardActionArea,\n} from '@material-ui/core';\nimport DeleteForeverTwoToneIcon from '@material-ui/icons/DeleteForeverTwoTone';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/contacts/contacts-actions';\n\nconst useStyles = makeStyles({\n  listItem: {\n    '&:not(:last-child)': {\n      marginBottom: 10,\n    },\n  },\n});\n\nfunction Conact({ id, name, number, delContact }) {\n  const classes = useStyles();\n\n  return (\n    <li className={classes.listItem}>\n      <Card variant=\"outlined\">\n        <CardActionArea>\n          <CardContent>\n            <Box display=\"flex\" justifyContent=\"space-between\">\n              <p>\n                {name}: {number}\n              </p>\n              <IconButton\n                color=\"primary\"\n                component=\"span\"\n                onClick={() => delContact(id)}\n              >\n                <DeleteForeverTwoToneIcon />\n              </IconButton>\n            </Box>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    </li>\n  );\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    delContact: value => dispatch(actions.delContact(value)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Conact);\n","import Conact from '../Contact';\nimport { List } from '@material-ui/core';\nimport { connect } from 'react-redux';\n\nfunction ContactList({ contacts }) {\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => {\n        return <Conact key={id} id={id} name={name} number={number} />;\n      })}\n    </List>\n  );\n}\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return allContacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts, filter }) => ({\n  contacts: getVisibleContacts(contacts, filter),\n});\n\nexport default connect(mapStateToProps)(ContactList);\n","import ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport { Container, Typography } from '@material-ui/core';\n\nfunction App() {\n  return (\n    <>\n      <Container maxWidth=\"xs\">\n        <Typography variant=\"h2\" align=\"center\">\n          Phonebook\n        </Typography>\n\n        <ContactForm />\n\n        <Typography variant=\"h4\" align=\"center\">\n          Contacts\n        </Typography>\n\n        <Filter />\n\n        <ContactList />\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as actions from '../../redux/contacts/contacts-actions';\n\nconst init = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n];\n\nconst contacts = createReducer(init, {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.delContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: persistReducer(contactsPersistConfig, contactsReducer),\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\nimport { store, persistor } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}