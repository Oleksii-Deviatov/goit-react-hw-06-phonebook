{"version":3,"sources":["components/ContactForm/ContactForm.jsx","redux/actions.js","components/Filter/Filter.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","App.jsx","redux/store.js","index.js"],"names":["connect","state","inputName","inputForm","inputNumber","dispatch","setInputName","value","type","payload","actions","setInputNumber","addContact","onSubmit","e","preventDefault","autoComplete","Box","display","flexDirection","TextField","id","label","onChange","target","margin","Button","variant","color","inputFilter","filter","setInputFilter","useStyles","makeStyles","listItem","marginBottom","delContact","name","number","classes","className","Card","CardActionArea","CardContent","justifyContent","IconButton","component","onClick","contacts","filteredContacts","useEffect","List","map","App","Container","maxWidth","Typography","align","initialState","store","createStore","length","alert","find","toLowerCase","shortid","filtered","includes","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ef91599.chunk.js","sourcesContent":["import React from 'react';\nimport { TextField, Button, Box } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/actions';\n\nfunction ContactForm({\n  inputName,\n  inputNumber,\n  setInputName,\n  setInputNumber,\n  addContact,\n}) {\n  function inputNameHandler({ target: { value } }) {\n    setInputName(value);\n  }\n\n  function inputNumberHendler({ target: { value } }) {\n    setInputNumber(value);\n  }\n\n  function submitHendler(e) {\n    e.preventDefault();\n    addContact();\n  }\n\n  return (\n    <form onSubmit={submitHendler} autoComplete=\"off\">\n      <Box display=\"flex\" flexDirection=\"column\">\n        <TextField\n          id=\"standard-basic\"\n          label=\"Name\"\n          value={inputName}\n          onChange={inputNameHandler}\n          margin=\"dense\"\n        />\n        <TextField\n          id=\"standard-basic\"\n          label=\"Number\"\n          value={inputNumber}\n          onChange={inputNumberHendler}\n          margin=\"dense\"\n        />\n        <Button variant=\"outlined\" type=\"submit\" color=\"primary\">\n          add contact\n        </Button>\n      </Box>\n    </form>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    inputName: state.inputForm.inputName,\n    inputNumber: state.inputForm.inputNumber,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setInputName: value => dispatch(actions.setInputName(value)),\n    setInputNumber: value => dispatch(actions.setInputNumber(value)),\n    addContact: () => dispatch(actions.addContact()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","export const addContact = () => ({\n  type: 'contacts/addContact',\n});\n\nexport const delContact = value => ({\n  type: 'contacts/delContact',\n  payload: value,\n});\n\nexport const setInputName = value => ({\n  type: 'inputForm/setInputName',\n  payload: value,\n});\n\nexport const setInputNumber = value => ({\n  type: 'inputForm/setInputNumber',\n  payload: value,\n});\n\nexport const setInputFilter = value => ({\n  type: 'filter/setInputFilter',\n  payload: value,\n});\n\nexport const filter = () => ({\n  type: 'filteredContacts/filter',\n});\n","import React from 'react';\nimport { TextField, Box } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/actions';\n\nfunction Filter({ inputFilter, setInputFilter, filter }) {\n  function inputFilterHendler({ target: { value } }) {\n    setInputFilter(value);\n    filter();\n  }\n\n  return (\n    <form autoComplete=\"off\">\n      <Box display=\"flex\" flexDirection=\"column\">\n        <TextField\n          id=\"standard-basic\"\n          label=\"find contact by name\"\n          value={inputFilter}\n          onChange={inputFilterHendler}\n          margin=\"dense\"\n        />\n      </Box>\n    </form>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    inputFilter: state.filter,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setInputFilter: value => dispatch(actions.setInputFilter(value)),\n    filter: () => dispatch(actions.filter()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport {\n  Card,\n  CardContent,\n  IconButton,\n  Box,\n  CardActionArea,\n} from '@material-ui/core';\nimport DeleteForeverTwoToneIcon from '@material-ui/icons/DeleteForeverTwoTone';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/actions';\n\nconst useStyles = makeStyles({\n  listItem: {\n    '&:not(:last-child)': {\n      marginBottom: 10,\n    },\n  },\n});\n\nfunction Conact({ id, name, number, delContact }) {\n  const classes = useStyles();\n\n  return (\n    <li className={classes.listItem}>\n      <Card variant=\"outlined\">\n        <CardActionArea>\n          <CardContent>\n            <Box display=\"flex\" justifyContent=\"space-between\">\n              <p>\n                {name}: {number}\n              </p>\n              <IconButton\n                color=\"primary\"\n                component=\"span\"\n                onClick={() => delContact(id)}\n              >\n                <DeleteForeverTwoToneIcon />\n              </IconButton>\n            </Box>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    </li>\n  );\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    delContact: value => dispatch(actions.delContact(value)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Conact);\n","import React, { useEffect } from 'react';\nimport Conact from '../Contact';\nimport { List } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/actions';\n\nfunction ContactList({ contacts, filteredContacts, filter }) {\n  useEffect(() => {\n    filter();\n  }, [contacts]);\n\n  return (\n    <List>\n      {filteredContacts.map(({ id, name, number }) => {\n        return <Conact key={id} id={id} name={name} number={number} />;\n      })}\n    </List>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    contacts: state.contacts,\n    filteredContacts: state.filteredContacts,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    filter: () => dispatch(actions.filter()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport { Container, Typography } from '@material-ui/core';\n\nfunction App() {\n  return (\n    <>\n      <Container maxWidth=\"xs\">\n        <Typography variant=\"h2\" align=\"center\">\n          Phonebook\n        </Typography>\n\n        <ContactForm />\n\n        <Typography variant=\"h4\" align=\"center\">\n          Contacts\n        </Typography>\n\n        <Filter />\n\n        <ContactList />\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport shortid from 'shortid';\n\nconst initialState = {\n  contacts: [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ],\n\n  inputForm: {\n    inputName: '',\n    inputNumber: '',\n  },\n\n  filter: '',\n\n  filteredContacts: [],\n};\n\nconst reducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case 'contacts/addContact':\n      const inputName = state.inputForm.inputName;\n      const inputNumber = state.inputForm.inputNumber;\n\n      if (inputName.length === 0 || inputNumber.length === 0) {\n        alert('Empty fields');\n        return { ...state };\n      } else if (\n        state.contacts.find(\n          ({ name }) => name.toLowerCase() === inputName.toLowerCase(),\n        )\n      ) {\n        alert('Name allready exist');\n        return { ...state };\n      }\n\n      return {\n        ...state,\n\n        inputForm: {\n          inputName: '',\n          inputNumber: '',\n        },\n\n        contacts: [\n          ...state.contacts,\n          {\n            id: shortid(),\n            name: inputName,\n            number: inputNumber,\n          },\n        ],\n      };\n\n    case 'contacts/delContact':\n      return {\n        ...state,\n        contacts: state.contacts.filter(({ id }) => id !== payload),\n      };\n\n    case 'inputForm/setInputName':\n      return {\n        ...state,\n        inputForm: {\n          ...state.inputForm,\n          ...{ inputName: payload },\n        },\n      };\n\n    case 'inputForm/setInputNumber':\n      return {\n        ...state,\n        inputForm: {\n          ...state.inputForm,\n          ...{ inputNumber: payload },\n        },\n      };\n\n    case 'filter/setInputFilter':\n      return {\n        ...state,\n        filter: payload,\n      };\n\n    case 'filteredContacts/filter':\n      const filtered = state.contacts.filter(({ name }) =>\n        name.toLowerCase().includes(state.filter.toLowerCase()),\n      );\n      return {\n        ...state,\n        filteredContacts: [...filtered],\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer, composeWithDevTools());\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}