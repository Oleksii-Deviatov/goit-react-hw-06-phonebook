{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","App.jsx","index.js"],"names":["ContactForm","setContacts","contacts","useState","inputName","setInputName","inputNumber","setInputNumber","onSubmit","e","preventDefault","find","name","toLowerCase","alert","prevState","id","shortid","number","autoComplete","Box","display","flexDirection","TextField","label","value","onChange","target","margin","Button","variant","type","color","Filter","setFind","useStyles","makeStyles","listItem","marginBottom","Conact","delContact","classes","className","Card","CardActionArea","CardContent","justifyContent","IconButton","component","onClick","ContactList","filterContacts","List","map","App","Container","maxWidth","Typography","align","filter","includes","el","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d68c5720.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport { TextField, Button, Box } from '@material-ui/core';\n\nfunction ContactForm({ setContacts, contacts }) {\n  const [inputName, setInputName] = useState('');\n\n  function inputNameHandler({ target: { value } }) {\n    setInputName(value);\n  }\n\n  const [inputNumber, setInputNumber] = useState('');\n\n  function inputNumberHendler({ target: { value } }) {\n    setInputNumber(value);\n  }\n\n  function submitHandler(e) {\n    e.preventDefault();\n    if (inputName === '') {\n      return;\n    }\n    if (\n      contacts.find(\n        ({ name }) => name.toLowerCase() === inputName.toLowerCase(),\n      )\n    ) {\n      alert(`${inputName} already exist`);\n      return;\n    }\n\n    setContacts(prevState => [\n      ...prevState,\n      {\n        id: shortid(),\n        name: inputName,\n        number: inputNumber,\n      },\n    ]);\n    setInputName('');\n    setInputNumber('');\n  }\n\n  return (\n    <form onSubmit={submitHandler} autoComplete=\"off\">\n      <Box display=\"flex\" flexDirection=\"column\">\n        <TextField\n          id=\"standard-basic\"\n          label=\"Name\"\n          value={inputName}\n          onChange={inputNameHandler}\n          margin=\"dense\"\n        />\n        <TextField\n          id=\"standard-basic\"\n          label=\"Number\"\n          value={inputNumber}\n          onChange={inputNumberHendler}\n          margin=\"dense\"\n        />\n        <Button variant=\"outlined\" type=\"submit\" color=\"primary\">\n          add contact\n        </Button>\n      </Box>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  setContacts: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport { TextField, Box } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nfunction Filter({ setFind, find }) {\n  function inputFindHendler({ target: { value } }) {\n    setFind(value);\n  }\n\n  return (\n    <form autoComplete=\"off\">\n      <Box display=\"flex\" flexDirection=\"column\">\n        <TextField\n          id=\"standard-basic\"\n          label=\"find contact by name\"\n          value={find}\n          onChange={inputFindHendler}\n          margin=\"dense\"\n        />\n      </Box>\n    </form>\n  );\n}\n\nFilter.propTypes = {\n  setFind: PropTypes.func.isRequired,\n  find: PropTypes.string.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  IconButton,\n  Box,\n  CardActionArea,\n} from '@material-ui/core';\nimport DeleteForeverTwoToneIcon from '@material-ui/icons/DeleteForeverTwoTone';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  listItem: {\n    '&:not(:last-child)': {\n      marginBottom: 10,\n    },\n  },\n});\n\nfunction Conact({ id, name, number, delContact }) {\n  const classes = useStyles();\n\n  return (\n    <li className={classes.listItem}>\n      <Card variant=\"outlined\">\n        <CardActionArea>\n          <CardContent>\n            <Box display=\"flex\" justifyContent=\"space-between\">\n              <p>\n                {name}: {number}\n              </p>\n              <IconButton\n                color=\"primary\"\n                component=\"span\"\n                onClick={() => delContact(id)}\n              >\n                <DeleteForeverTwoToneIcon />\n              </IconButton>\n            </Box>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    </li>\n  );\n}\n\nConact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  delContact: PropTypes.func.isRequired,\n};\n\nexport default Conact;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Conact from '../Contact';\nimport { List } from '@material-ui/core';\n\nfunction ContactList({ contacts, filterContacts, delContact }) {\n  return (\n    <List>\n      {filterContacts()\n        ? filterContacts().map(({ id, name, number }) => {\n            return (\n              <Conact\n                key={id}\n                id={id}\n                name={name}\n                number={number}\n                delContact={delContact}\n              />\n            );\n          })\n        : contacts.map(({ id, name, number }) => {\n            return (\n              <Conact\n                key={id}\n                id={id}\n                name={name}\n                number={number}\n                delContact={delContact}\n              />\n            );\n          })}\n    </List>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  filterContacts: PropTypes.func.isRequired,\n  delContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React, { useState } from 'react';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport { Container, Typography } from '@material-ui/core';\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n\n  const [find, setFind] = useState('');\n\n  function filterContacts() {\n    if (!find) {\n      return;\n    }\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(find.toLowerCase()),\n    );\n  }\n\n  function delContact(id) {\n    setContacts(contacts.filter(el => el.id !== id));\n  }\n\n  return (\n    <>\n      <Container maxWidth=\"xs\">\n        <Typography variant=\"h2\" align=\"center\">\n          Phonebook\n        </Typography>\n\n        <ContactForm setContacts={setContacts} contacts={contacts} />\n\n        <Typography variant=\"h4\" align=\"center\">\n          Contacts\n        </Typography>\n\n        <Filter setFind={setFind} find={find} />\n\n        <ContactList\n          contacts={contacts}\n          filterContacts={filterContacts}\n          delContact={delContact}\n        />\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}