{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","App.jsx","index.js"],"names":["addContact","createAction","value","payload","id","shortid","delContact","changeFilter","contacts","createReducer","name","number","actions","state","filter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","console","log","connect","dispatch","data","useState","inputName","setInputName","inputNumber","setInputNumber","onSubmit","e","preventDefault","find","toLowerCase","alert","autoComplete","Box","display","flexDirection","TextField","label","onChange","target","margin","Button","variant","type","color","useStyles","makeStyles","listItem","marginBottom","classes","className","Card","CardActionArea","CardContent","justifyContent","IconButton","component","onClick","getVisibleContacts","allContacts","normalizedFilter","includes","List","map","App","Container","maxWidth","Typography","align","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.2ce37d25.chunk.js","sourcesContent":["import shortid from 'shortid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst addContact = createAction('contacts/add', value => ({\n  payload: {\n    id: shortid(),\n    ...value,\n  },\n}));\n\nconst delContact = createAction('contacts/del');\n\nconst changeFilter = createAction('contacts/changeFilter');\n\nexport { addContact, delContact, changeFilter };\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as actions from '../../redux/contacts/contacts-actions';\n\nconst init = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n];\n\nconst contacts = createReducer(init, {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.delContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: persistReducer(contactsPersistConfig, contactsReducer),\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nconsole.log(process.env.NODE_ENV);\nconsole.log(process.env.NODE_ENV === 'development');\n\nexport { store, persistor };\n","import React, { useState } from 'react';\nimport { TextField, Button, Box } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/contacts/contacts-actions';\n\nfunction ContactForm({ contacts, addContact }) {\n  const [inputName, setInputName] = useState('');\n  const [inputNumber, setInputNumber] = useState('');\n\n  function inputNameHandler({ target: { value } }) {\n    setInputName(value);\n  }\n\n  function inputNumberHendler({ target: { value } }) {\n    setInputNumber(value);\n  }\n\n  function clrForm() {\n    setInputName('');\n    setInputNumber('');\n  }\n\n  function submitHendler(e) {\n    e.preventDefault();\n    if (inputName === '') {\n      return;\n    }\n\n    if (\n      contacts.find(\n        ({ name }) => name.toLowerCase() === inputName.toLowerCase(),\n      )\n    ) {\n      alert(`${inputName} already exist`);\n      return;\n    }\n\n    addContact({ name: inputName, number: inputNumber });\n    clrForm();\n  }\n\n  return (\n    <form onSubmit={submitHendler} autoComplete=\"off\">\n      <Box display=\"flex\" flexDirection=\"column\">\n        <TextField\n          id=\"standard-basic\"\n          label=\"Name\"\n          value={inputName}\n          onChange={inputNameHandler}\n          margin=\"dense\"\n        />\n        <TextField\n          id=\"standard-basic\"\n          label=\"Number\"\n          value={inputNumber}\n          onChange={inputNumberHendler}\n          margin=\"dense\"\n        />\n        <Button variant=\"outlined\" type=\"submit\" color=\"primary\">\n          add contact\n        </Button>\n      </Box>\n    </form>\n  );\n}\n\nconst mapStateToProps = ({ contacts }) => ({ contacts });\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addContact: data => dispatch(actions.addContact(data)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport { TextField, Box } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/contacts/contacts-actions';\n\nfunction Filter({ changeFilter, filter }) {\n  function inputFilterHendler({ target: { value } }) {\n    changeFilter(value);\n  }\n\n  return (\n    <form autoComplete=\"off\">\n      <Box display=\"flex\" flexDirection=\"column\">\n        <TextField\n          id=\"standard-basic\"\n          label=\"find contact by name\"\n          value={filter}\n          onChange={inputFilterHendler}\n          margin=\"dense\"\n        />\n      </Box>\n    </form>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    filter: state.filter,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeFilter: value => dispatch(actions.changeFilter(value)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport {\n  Card,\n  CardContent,\n  IconButton,\n  Box,\n  CardActionArea,\n} from '@material-ui/core';\nimport DeleteForeverTwoToneIcon from '@material-ui/icons/DeleteForeverTwoTone';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/contacts/contacts-actions';\n\nconst useStyles = makeStyles({\n  listItem: {\n    '&:not(:last-child)': {\n      marginBottom: 10,\n    },\n  },\n});\n\nfunction Conact({ id, name, number, delContact }) {\n  const classes = useStyles();\n\n  return (\n    <li className={classes.listItem}>\n      <Card variant=\"outlined\">\n        <CardActionArea>\n          <CardContent>\n            <Box display=\"flex\" justifyContent=\"space-between\">\n              <p>\n                {name}: {number}\n              </p>\n              <IconButton\n                color=\"primary\"\n                component=\"span\"\n                onClick={() => delContact(id)}\n              >\n                <DeleteForeverTwoToneIcon />\n              </IconButton>\n            </Box>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    </li>\n  );\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    delContact: value => dispatch(actions.delContact(value)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Conact);\n","import Conact from '../Contact';\nimport { List } from '@material-ui/core';\nimport { connect } from 'react-redux';\n\nfunction ContactList({ contacts }) {\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => {\n        return <Conact key={id} id={id} name={name} number={number} />;\n      })}\n    </List>\n  );\n}\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return allContacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts, filter }) => ({\n  contacts: getVisibleContacts(contacts, filter),\n});\n\nexport default connect(mapStateToProps)(ContactList);\n","import ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport { Container, Typography } from '@material-ui/core';\n\nfunction App() {\n  return (\n    <>\n      <Container maxWidth=\"xs\">\n        <Typography variant=\"h2\" align=\"center\">\n          Phonebook\n        </Typography>\n\n        <ContactForm />\n\n        <Typography variant=\"h4\" align=\"center\">\n          Contacts\n        </Typography>\n\n        <Filter />\n\n        <ContactList />\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}